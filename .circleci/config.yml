version: 2.1
jobs:
  lint:
    docker:
    # Use the same Docker base as the project
      - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout
  
      - run:
          name: install dependencies
          command: |
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
  
       # run lint!
      - run:
          name: run lint
          command: |
            make lint   
            
  docker-build-push:
    machine: true
      
    steps:
      - checkout
      
      - run:
          name: build and push docker
          command: |
            chmod +x docker_run_push.sh
            ./docker_run_push.sh
  
  deploy-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: deployment.yml
          resource-name: deployment/udacity-capstone
      - run:
          name: check cluster
          command: |
            kubectl get nodes
            kubectl get deployment
            kubectl get service/udacity-capstone
            kubectl describe services udacity-capstone  
          
    
orbs:
  aws-eks: circleci/aws-eks@1.0.0
  kubernetes: circleci/kubernetes@0.11.1
  
workflows:
  default:
    jobs:
      - lint
      - docker-build-push:
          requires: [lint]
      # - aws-eks/create-cluster:
      #     cluster-name: udacity-capstone
      #     requires: [docker-build-push]
      - deploy-cluster:
          cluster-name: udacity-capstone
          # requires: [aws-eks/create-cluster]
      - aws-eks/update-container-image:
          cluster-name: udacity-capstone
          container-image-updates: udacity-capstone=seewei/udacity-capstone
          post-steps:
            - kubernetes/delete-resource:
                resource-names: udacity-capstone
                resource-types: deployment
                wait: true
          record: true
          requires: [deploy-cluster]
          resource-name: deployment/udacity-capstone
     